# generated from kustomize build .ci
#   - removed the release segment.
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: simplewebkv-ci
  labels:
    tribe: ci-team
    service: simplewebkv-testbed
spec:
  params:
    - name: gitrevision
      type: string
      description: "Commit SHA."
    - name: gitreponame
      type: string
      description: "The GitHub repository name, e.g.: simplewebkv"
  finally:
  - name: delete-mft-env
    params:
    - name: kube-namespace
      value: mft-$(context.pipelineRun.name)
    taskRef:
      name: delete-mft-env
      kind: ClusterTask
  - name: set-final-status
    params:
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      - name: pipelinerun-namespace
        value: $(context.pipelineRun.namespace)
      - name: pipeline-name
        value: $(context.pipeline.name)
      - name: SHA
        value: $(params.gitrevision)
      - name: REPO_NAME
        value: $(params.gitreponame)
    taskRef:
      name: set-github-status-v2
    workspaces:
    - name: local-workspace
      workspace: local-workspace
  outputs:
    resources:
    - name: pr
      type: pullRequest
  resources:
  - name: git-source
    type: git
  - name: pr
    type: pullRequest
  tasks:
  - name: set-pending-status
    params:
    - name: pipelinerun-name
      value: $(context.pipelineRun.name)
    - name: pipelinerun-namespace
      value: $(context.pipelineRun.namespace)
    - name: pipeline-name
      value: $(context.pipeline.name)
    - name: SHA
      value: $(params.gitrevision)
    - name: REPO_NAME
      value: $(params.gitreponame)
    taskRef:
      name: set-github-status-v2
    workspaces:
    - name: local-workspace
      workspace: local-workspace
  - name: create-mft-env
    params:
    - name: kube-namespace
      value: $(context.pipelineRun.name)
    runAfter:
    - set-pending-status
    taskRef:
      name: create-mft-env
      kind: ClusterTask
  - name: execute-ci-task
    params:
    - name: kube-namespace
      value: $(context.pipelineRun.name)
    resources:
      inputs:
      - name: pr
        resource: pr
      - name: git-source
        resource: git-source
    runAfter:
    - create-mft-env
    taskRef:
      name: execute-ci
      kind: ClusterTask
    workspaces:
    - name: local-workspace
      workspace: local-workspace
  - name: dummyhello
    runAfter: [execute-ci-task]
    workspaces:
      - name: local-workspace
        workspace: local-workspace
    taskSpec:
      workspaces:
        - name: local-workspace
      steps:
        - name: finalize-hello
          image: 'ubuntu'
          script: |
            #!/usr/bin/env bash
            echo "Say Hello..."
  - name: finalize-pipeline-status
    runAfter:
    - execute-ci-task
    taskSpec:
      steps:
      - image: ubuntu
        name: finalize
        script: |
          #!/usr/bin/env bash
          echo success > /workspace/local-workspace/pipelineStatus
      workspaces:
      - name: local-workspace
    workspaces:
    - name: local-workspace
      workspace: local-workspace
  workspaces:
  - name: local-workspace

# kubectl apply -n tekton-pipelines -f ./others/tekton-examples/04-generated_tkn_manifest.yaml
