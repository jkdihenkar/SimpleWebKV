# generated from kustomize build .ci
#   - removed the release segment.
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: simplewebkv-ci
  labels:
    tribe: ci-team
    service: simplewebkv-testbed
spec:
  finally:
  - name: delete-mft-env
    params:
    - name: kube-namespace
      value: mft-$(context.pipelineRun.name)
    taskRef:
      name: delete-mft-env
      kind: ClusterTask
  - name: set-final-status
    params:
    - name: pipelinerun-name
      value: $(context.pipelineRun.name)
    - name: pipeline-name
      value: $(context.pipeline.name)
    resources:
      inputs:
      - name: pr
        resource: pr
      outputs:
      - name: pr
        resource: pr
    taskRef:
      name: set-status
      kind: ClusterTask
    workspaces:
    - name: local-workspace
      workspace: local-workspace
  outputs:
    resources:
    - name: pr
      type: pullRequest
  resources:
  - name: git-source
    type: git
  - name: pr
    type: pullRequest
  tasks:
  - name: set-pending-status
    params:
    - name: pipelinerun-name
      value: $(context.pipelineRun.name)
    resources:
      inputs:
      - name: pr
        resource: pr
      outputs:
      - name: pr
        resource: pr
    taskRef:
      name: set-status
      kind: ClusterTask
    workspaces:
    - name: local-workspace
      workspace: local-workspace
  - name: create-mft-env
    params:
    - name: kube-namespace
      value: $(context.pipelineRun.name)
    runAfter:
    - set-pending-status
    taskRef:
      name: create-mft-env
      kind: ClusterTask
  - name: execute-ci-task
    params:
    - name: kube-namespace
      value: $(context.pipelineRun.name)
    resources:
      inputs:
      - name: pr
        resource: pr
      - name: git-source
        resource: git-source
    runAfter:
    - create-mft-env
    taskRef:
      name: execute-ci
      kind: ClusterTask
    workspaces:
    - name: local-workspace
      workspace: local-workspace
  - name: dummyhello
    runAfter: [execute-ci-task]
    workspaces:
      - name: local-workspace
        workspace: local-workspace
    taskSpec:
      workspaces:
        - name: local-workspace
      steps:
        - name: finalize-hello
          image: 'ubuntu'
          script: |
            #!/usr/bin/env bash
            echo "Say Hello..."
# add git-clone-tests #
  - name: git-clone-run-noargs
    runAfter:
      - execute-ci-task
    workspaces:
      - name: output
        emptyDir: {}
    taskRef:
      name: git-clone
    params:
      - name: url
        value: https://github.com/kelseyhightower/nocode
  - name: git-clone-run-tag
    runAfter:
      - execute-ci-task
    workspaces:
      - name: output
        emptyDir: {}
    taskRef:
      name: git-clone
    params:
      - name: url
        value: https://github.com/kelseyhightower/nocode
      - name: revision
        value: 1.0.0
  - name: git-clone-run-no-submodules
    runAfter:
      - execute-ci-task
    workspaces:
      - name: output
        emptyDir: {}
    taskRef:
      name: git-clone
    params:
      - name: url
        value: https://github.com/githubtraining/example-dependency
      - name: submodules
        value: "false"
  - name: git-clone-run-no-depth-2
    runAfter:
      - execute-ci-task
    workspaces:
      - name: output
        emptyDir: {}
    taskRef:
      name: git-clone
    params:
      - name: url
        value: https://github.com/kelseyhightower/nocode
      - name: depth
        value: "2"
  - name: git-clone-run-sslverify-none
    runAfter:
      - execute-ci-task
    workspaces:
      - name: output
        emptyDir: {}
    taskRef:
      name: git-clone
    params:
      - name: url
        value: https://github.com/kelseyhightower/nocode
      - name: sslVerify
        value: "false"
  - name: git-clone-run-subdirectory
    runAfter:
      - execute-ci-task
    workspaces:
      - name: output
        emptyDir: {}
    taskRef:
      name: git-clone
    params:
      - name: url
        value: https://github.com/kelseyhightower/nocode
      - name: subdirectory
        value: "hellomoto"
  - name: git-clone-run-delete-existing
    runAfter:
      - execute-ci-task
    workspaces:
      - name: output
        emptyDir: {}
    taskRef:
      name: git-clone
    params:
      - name: url
        value: https://github.com/kelseyhightower/nocode
      - name: deleteExisting
        value: "true"
  - name: git-clone-run-without-verbose
    runAfter:
      - execute-ci-task
    workspaces:
    - name: output
      emptyDir: {}
    taskRef:
      name: git-clone
    params:
      - name: url
        value: https://github.com/kelseyhightower/nocode
      - name: verbose
        value: "false"
# add git-clone-tests #
  - name: finalize-pipeline-status
    runAfter:
    - execute-ci-task
    taskSpec:
      steps:
      - image: ubuntu
        name: finalize
        script: |
          #!/usr/bin/env bash
          echo success > /workspace/local-workspace/pipelineStatus
      workspaces:
      - name: local-workspace
    workspaces:
    - name: local-workspace
      workspace: local-workspace
  workspaces:
  - name: local-workspace

# kubectl apply -n tekton-pipelines -f ./others/tekton-examples/04-generated_tkn_manifest.yaml
